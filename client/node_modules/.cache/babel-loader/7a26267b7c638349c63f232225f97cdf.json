{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/felix/react-nodejs/client/src/components/Chat/chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryStrig from 'query-string';\nimport io from 'socket.io-client';\nimport './chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/messages';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryStrig.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.disconnect(true);\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendmessage = e => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(messages, message);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContaier\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBar, {\n        room: room\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        message: message,\n        setMessage: setMessage,\n        sendmessage: sendmessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"V/zz/NCS5CF8FNR9V0MXcWNSfdM=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/felix/react-nodejs/client/src/components/Chat/chat.js"],"names":["React","useState","useEffect","queryStrig","io","InfoBar","Input","Messages","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","disconnect","on","sendmessage","e","preventDefault","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AACrB,QAAK,CAACC,IAAD,EAAMC,OAAN,IAAeX,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACY,IAAD,EAAMC,OAAN,IAAeb,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAK,CAACc,OAAD,EAASC,UAAT,IAAqBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAK,CAACgB,QAAD,EAAUC,WAAV,IAAuBjB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMkB,QAAQ,GAAC,uBAAf;AAEAjB,EAAAA,SAAS,CAAC,MAAI;AAClB,UAAM;AAACS,MAAAA,IAAD;AAAME,MAAAA;AAAN,QAAaV,UAAU,CAACiB,KAAX,CAAiBV,QAAQ,CAACW,MAA1B,CAAnB;AACEb,IAAAA,MAAM,GAACJ,EAAE,CAACe,QAAD,CAAT;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACFL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAmB;AAACX,MAAAA,IAAD;AAAME,MAAAA;AAAN,KAAnB,EAA+B,MAAI,CAGlC,CAHD;AAIA,WAAO,MAAI;AACPL,MAAAA,MAAM,CAACe,UAAP,CAAkB,IAAlB;AAEH,KAHD;AAIK,GAbQ,EAaP,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAbO,CAAT;AAcAnB,EAAAA,SAAS,CAAC,MAAI;AAEVM,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAqBT,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AAEH,KAHD;AAIH,GANQ,EAMP,CAACE,QAAD,CANO,CAAT;;AAQA,QAAMQ,WAAW,GAAEC,CAAD,IAAK;AACnBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGZ,OAAH,EAAW;AACPP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAkC,MAAIC,UAAU,CAAC,EAAD,CAAhD;AACH;AACJ,GAND;;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAqBF,OAArB;AACA,sBACI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,2BAEC;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEF;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEI;AAApB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGK,QAAC,KAAD;AAAQ,QAAA,OAAO,EAAEF,OAAjB;AAAyB,QAAA,UAAU,EAAEC,UAArC;AAAgD,QAAA,WAAW,EAAES;AAA7D;AAAA;AAAA;AAAA;AAAA,cAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhDD;;GAAMhB,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport queryStrig from 'query-string';\nimport io from 'socket.io-client';\nimport './chat.css'\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nimport Messages from '../Messages/messages'\nlet socket;\n\nconst Chat=({location})=>{\n    const[name,setName]=useState('')\n    const [room,setRoom]=useState('')\n    const[message,setMessage]=useState('')\n    const[messages,setMessages]=useState([])\n    const ENDPOINT='http://localhost:5000'\n\n    useEffect(()=>{\nconst {name,room} =queryStrig.parse(location.search)\n  socket=io(ENDPOINT);\n  setName(name)\n  setRoom(room)\nsocket.emit('join',{name,room},()=>{\n\n\n})\nreturn ()=>{\n    socket.disconnect(true)\n    \n}\n    },[ENDPOINT, location.search])\n    useEffect(()=>{\n\n        socket.on('message',(message)=>{\n            setMessages([...messages,message])\n\n        })\n    },[messages])\n\n    const sendmessage=(e)=>{\n        e.preventDefault()\n\n        if(message){\n            socket.emit('sendMessage',message,()=>setMessage(''))\n        }\n    }\n    console.log(messages,message)\n    return(\n        <div  className=\"outerContaier\">\n         \n         <div  className=\"container\">\n             <InfoBar room={room}/>\n             <Messages messages={messages}/>\n              <Input  message={message}setMessage={setMessage}sendmessage={sendmessage}/>\n         </div>\n        </div>\n    )\n\n}\nexport default Chat"]},"metadata":{},"sourceType":"module"}